// src/mongo/connectDB.ts
import mongoose from "mongoose";

const connectDB = async (): Promise<void> => {
    const uri = process.env.DB_URL;

    if (!uri) {
        console.error("‚ùå No se encontr√≥ la variable de entorno DB_URL");
        process.exit(1); // detiene el servidor si falta
    }

    try {
        mongoose.set("strictQuery", true);

        await mongoose.connect(uri, {
            serverSelectionTimeoutMS: 15000, // espera m√°s antes de dar timeout
            socketTimeoutMS: 45000,          // mantiene el socket m√°s tiempo abierto
            autoIndex: true,                 // crea √≠ndices autom√°ticamente
            connectTimeoutMS: 15000,         // timeout de conexi√≥n inicial
        });

        console.log("‚úÖ Conectado correctamente a MongoDB");
    } catch (error: any) {
        console.error("‚ùå Error conectando a MongoDB:", error.message);
        process.exit(1); // termina la app si no puede conectar
    }

    // Eventos √∫tiles para monitorear la conexi√≥n
    mongoose.connection.on("disconnected", () => {
        console.warn("‚ö†Ô∏è  Conexi√≥n con MongoDB perdida");
    });

    mongoose.connection.on("reconnected", () => {
        console.log("üîÅ Reconectado a MongoDB");
    });

    mongoose.connection.on("error", (err) => {
        console.error("‚ùå Error en la conexi√≥n de MongoDB:", err);
    });
};

export default connectDB;
